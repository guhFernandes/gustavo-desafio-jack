apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-html-configmap
  labels:
    app: {{ .Chart.Name }}
    desafio: jackexperts
data:
  index.html: |
    <html lang="pt-br">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Projeto de Estágio Jack Experts - Vinícius Matos</title>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

        <style>
            body {
              font-family: 'Inter', sans-serif;
              margin: 0;
              padding: 0;
              background-color: #f4f4f9;
              color: #0b0633;
            }

            header {
              background-color:#0b0633;
              color: rgb(255, 255, 255);
              padding: 20px 0;
              text-align: center;
            }

            h1 {
              margin: 0;
              font-size: 36px;
            }

            .container {
              max-width: 1200px;
              margin: 20px auto;
              padding: 0 20px;
            }

            h2 {
              color: #0b0633;
              margin-top: 40px;
            }

            h3 {
              margin: 0;
              font-size: 16px;
            }

            code {
              background-color: #eee;
              padding: 4px 8px;
              border-radius: 4px;
              font-family: monospace;
            }

            pre {
              background-color: #333;
              color: #fff;
              padding: 15px;
              border-radius: 8px;
              overflow-x: auto;
            }

            p {
              line-height: 1.6;
            }

            footer {
              text-align: center;
              padding: 20px;
              background-color: #333;
              color: white;
            }

            .code-box {
              background-color: #f9f9f9;
              border-left: 5px solid #0b0633;
              padding: 20px;
              margin: 20px 0;
            }

            .button {
              display: inline-block;
              padding: 10px 20px;
              background-color: #0b0633;
              color: white;
              text-decoration: none;
              border-radius: 4px;
              transition: background-color 0.3s;
            }

            .button:hover {
              background-color: #0b0633;
            }

            .nav {
              background-color: #fff;
              padding: 10px;
              box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
              position: sticky;
              top: 0;
            }

            .nav a {
              margin-right: 20px;
              text-decoration: none;
              color: #0b0633;
              font-weight: bold;
            }

            .nav a:hover {
              text-decoration: underline;
            }
          </style>

    </head>

    <body>

        <header>
            <h1>Projeto de Estágio Jack Experts</h1>
            <h3>Desenvolvido por Gustavo Fernandes</h3>
        </header>

        <div class="nav">
            <a href="#visao-geral">Visão Geral</a>
            <a href="#adições">Requisitos</a>
            <a href="#execucao">Execução</a>
            <a href="#conclusao">Conclusão</a>
        </div>

        <div class="container">
            <section id="visao-geral">
                <h2>Visão Geral</h2>
                <p>Este projeto implementa uma imagem nginx configurada pelo <strong>Helm</strong> e hospedada em
                    Kubernetes.
                    O HTML do projeto é configurado pelo <strong>ConfigMaps</strong> e a imagem, aplicada pelo
                    <strong>Docker</strong>. Todos os objetos no cluster possuem a label <code>desafio=jackexperts</code>,
                    como solicitado no desafio.
                </p>
            </section>

            <section id="adições">
                <h2>Obrigações</h2>
                <p>De acordo com os requisitos, estas foram as adições:</p>
                <ul>
                    <li>Uso de repositório git com Dockerfile e Helm;</li>
                    <li>A imagem deve ser construída por você e publicada no Docker Hub;</li>
                    <li>A imagem não deve rodar com usuário <code>root</code>;</li>
                    <li>A página web deve ser configurável via <strong>ConfigMap</strong>;</li>
                    <li>O Helm deverá definir todos os objetos da aplicação;</li>
                    <li>A aplicação deve possuir um domínio para acesso;</li>
                    <li>Todos os objetos no cluster instalados via Helm, devem possuir a label
                        <code>desafio=jackexperts</code>;
                    </li>
                    <li>Documentação;</li>
                </ul>
            </section>

            <section id="adições">
                <h2>Requisitos Obrigatorios</h2>
                <p>Para este projeto, você precisará dos seguintes componentes:</p>
                <ul>
                    <li>Kubernetes: Um cluster Kubernetes em execução.</li>
                    <li>Helm: O gerenciador de pacotes para Kubernetes deve estar instalado.</li>
                    <li>Docker: Para construir a imagem da aplicação.</li>
                    <li>kubectl: Ferramenta de linha de comando para interagir com o Kubernetes.</li>
                    <li>Documentação;</li>
                </ul>
            </section>

            <section id="execucao">
                <h2>Execução</h2>

                <h3>1. Construção e Publicação da Imagem Docker</h3>
                <p>Construímos e publicamos nossa imagem utilizando os comandos abaixo:</p>
                <div class="code-box">
                    <pre>
                        docker build -t guhfernandes/image-jack .
                        docker push guhfernandes/image-jack
                    </pre>
                </div>

                <h3>2. ConfigMap</h3>
                <p>O <strong>ConfigMap</strong> armazenando o HTML.</p>
                <div class="code-box">
                    <pre>
                        apiVersion: v1
                        kind: ConfigMap
                        metadata:
                          name: {{ .Release.Name }}-nginx-config
                          labels:
                            app: nginx
                            desafio: jack-experts
                        data:
                          index.html: |
                    </pre>
                </div>

                <h3>3. Deploy com Helm</h3>
                <p><strong>Deployment</strong> definindo os objetos do projeto.</p>

                <div class="code-box">
                    <pre>
                      apiVersion: apps/v1
                      kind: Deployment
                      metadata:
                        name: {{ .Release.Name }}-deployment
                        labels:
                          app: {{ .Chart.Name }}
                          desafio: jackexperts
                      spec:
                        replicas: 1
                        selector:
                          matchLabels:
                            app: {{ .Chart.Name }}
                        template:
                          metadata:
                            labels:
                              app: {{ .Chart.Name }}
                              desafio: jackexperts
                        spec:
                            containers:
                              - name: {{ .Chart.Name }}
                                image: nginx:alpine
                                ports:
                                  - containerPort: 80
                                volumeMounts:
                                  - name: html-volume
                                    mountPath: /usr/share/nginx/html
                                resources:
                                  limits:
                                    memory: "128Mi"
                                    cpu: "500m"
                            volumes:
                              - name: html-volume
                                configMap:
                                  name: html-configmap

                    </pre>
                </div>

                <h3>3.2. Values</h3>

                <div class="code-box">
                    <pre>
                      domain: ""

                      image:
                        repository: guhfernandes/image-jack
                        tag: "latesd"
                        pullPolicy: IfNotPresent

                      resources:
                        limits:
                          memory: "128Mi"
                          cpu: "500m"
                        requests:
                          memory: "64Mi"
                          cpu: "250m"

                      replicaCount: 1

                      service:
                        type: ClusterIP
                        port: 80

                      ingress:
                        enabled: true
                        annotations:
                          nginx.ingress.kubernetes.io/rewrite-target: /
                        hosts:
                          - host: "localhost"
                            paths:
                              - path: /
                                pathType: Prefix

                      labels:
                        desafio: jackexperts

                    </pre>
                </div>

                <h3>4. Hospedando com o Ingress</h3>
                <p>O <strong>Ingress</strong> hospeda o projeto localmente:</p>

                <div class="code-box">
                    <pre>
                      apiVersion: networking.k8s.io/v1
                      kind: Ingress
                      metadata:
                        name: jack-ingress
                        labels:
                          app: jack
                          desafio: jackexperts
                      spec:
                        rules:
                          - host: "localhost"
                            http:
                              paths:
                                - path: /
                                  pathType: Prefix
                                  backend:
                                    service:
                                      name: jack-service 
                                      port:
                                        number: 80
                    </pre>
                </div>

                <h3>5. Instalação de um cluster </h3>
                <p>O Helm cria uma release, que é um registro dessa instalação específica do chart, permitindo atualizações e reversões no futuro.</p>
                <div class="code-box">
                    <pre>
                        helm install minha-aplicacao ./meu-chart
                    </pre>
                </div>

                <h3>6. Verificar se a instalação do helm install</h3>
                <p>Se os pods estiverem no estado "Running" e os serviços e ingressos estiverem corretamente configurados, é um bom sinal de que a instalação foi bem-sucedida.</p>
                <div class="code-box">
                    <pre>
                        helm list
                        kubectl get pods
                        kubectl get services
                        kubectl get ingress
                    </pre>
                </div>

                <h3>7. Rodar aplicação</h3>
                <p>Rodar aplicação em localhost.</p>
                <div class="code-box">
                    <pre>
                        kubectl port-forward service/jack-service 8080:80
                    </pre>
                </div>

            </section>

            <section id="conclusao">
                <h2>Conclusão</h2>
                <p>O projeto é localhost um projeto configurado com Helm dentro de um cluster. Atendendo os requisitos do
                    desafio, sendo seguro e personalizável</p>
            </section>
        </div>

        <footer>
            <p>&copy; 2024 Documentação do Projeto - Desenvolvido por Gustavo Henrique Fernades da Silva</p>
        </footer>

    </body>

    </html>